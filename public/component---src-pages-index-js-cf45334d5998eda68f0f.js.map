{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/pages/stickyNews.js"],"names":["IndexPage","render","className","stickyNews","this","props","data","edges","news2022","newsfor2022","news2021","newsfor2021","news2020","newsfor2020","news2019","newsfor2019","news2018","newsfor2018","news2017","newsfor2017","Component","StickyNews","state","map","node","title","frontmatter","fields","slug","category","key","to","fluid","image1","childImageSharp","date","intro"],"mappings":"4KAgCMA,E,kGACJC,OAAA,WACE,OACE,kBAAC,IAAD,KACE,wBAAIC,UAAU,cAAd,iBAEA,kBAAC,UAAD,CAAYC,WAAYC,KAAKC,MAAMC,KAAKH,WAAWI,QAEnD,kBAAC,UAAD,CACEC,SAAUJ,KAAKC,MAAMC,KAAKG,YAAYF,MACtCG,SAAUN,KAAKC,MAAMC,KAAKK,YAAYJ,MACtCK,SAAUR,KAAKC,MAAMC,KAAKO,YAAYN,MACtCO,SAAUV,KAAKC,MAAMC,KAAKS,YAAYR,MACtCS,SAAUZ,KAAKC,MAAMC,KAAKW,YAAYV,MACtCW,SAAUd,KAAKC,MAAMC,KAAKa,YAAYZ,U,GAdxBa,aAqBTpB,a,2HC/CTqB,E,YACJ,WAAYhB,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAEKiB,MAAQ,CACXnB,WAAY,EAAKE,MAAMF,YAJR,E,oCAQnBF,OAAA,WACE,YAAoC,IAAzBG,KAAKkB,MAAMnB,WAAkC,wCAGtDC,KAAKkB,MAAMnB,WAAWoB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACrBC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAC9CC,EAAWL,EAAKE,YAAYG,SAElC,OACE,yBAAKC,IAAKN,EAAKG,OAAOC,MACpB,6BACE1B,UAAU,4BACV4B,IAAKN,EAAKG,OAAOC,MAEjB,6BAAS1B,UAAU,mBACjB,4BAAQA,UAAU,gCAChB,kBAAC,IAAD,CAAMA,UAAU,mBAAmB6B,GAAIP,EAAKG,OAAOC,MACjD,kBAAC,IAAD,CACEI,MAAOR,EAAKE,YAAYO,OAAOC,gBAAgBF,MAC/C9B,UAAW,mBAGf,yBAAKA,UAAU,sBACb,2BAAOA,UAAU,kBACf,kBAAC,IAAD,MACC,gBAFH,IAEqBsB,EAAKE,YAAYS,KACnC,MACAN,GAEH,4BACE,kBAAC,IAAD,CAAM3B,UAAU,kBAAkB6B,GAAIP,EAAKG,OAAOC,MAC/CH,IAGL,uBAAGvB,UAAU,mBACVsB,EAAKE,YAAYU,OAEpB,6BACA,kBAAC,IAAD,CAAMlC,UAAU,iBAAiB6B,GAAIP,EAAKG,OAAOC,MAC9C,0C,GAhDER,aA8DVC","file":"component---src-pages-index-js-cf45334d5998eda68f0f.js","sourcesContent":["import React, { Component } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport News from \"./news\"\nimport StickyNews from \"./stickyNews\"\n/* function initNetlifyIdentity() {\n  console.log(\"initNetlifyIdentity called\")\n  const script = document.createElement(\"script\")\n\n  script.src = \"https://identity.netlify.com/v1/netlify-identity-widget.js\"\n  script.async = true\n  document.body.appendChild(script)\n} */\n\n/* function openNetlifyModal() {\n  const netlifyIdentity = window.netlifyIdentity\n\n  if (netlifyIdentity) {\n    netlifyIdentity.open()\n  } else {\n    console.log(\"netlify identity not defined\")\n  }s\n}\n\nclass NetlifyIdentity extends Component {\n  componentDidMount() {\n    initNetlifyIdentity()\n  }\n  render() {\n    return <div></div>\n  }\n} */\nclass IndexPage extends Component {\n  render() {\n    return (\n      <Layout>\n        <h5 className=\"item-title\">Izpostavljeno</h5>\n\n        <StickyNews stickyNews={this.props.data.stickyNews.edges} />\n\n        <News\n          news2022={this.props.data.newsfor2022.edges}\n          news2021={this.props.data.newsfor2021.edges}\n          news2020={this.props.data.newsfor2020.edges}\n          news2019={this.props.data.newsfor2019.edges}\n          news2018={this.props.data.newsfor2018.edges}\n          news2017={this.props.data.newsfor2017.edges}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    stickyNews: allMarkdownRemark(\n      filter: { frontmatter: { top: { eq: true } } }\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            image1 {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            title\n            intro\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            top\n          }\n        }\n      }\n    }\n    newsfor2022: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          date: { lt: \"2023-01-01\", gt: \"2022-01-01 \" }\n          top: { eq: false }\n        }\n      }\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            image1 {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            title\n            intro\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            top\n          }\n        }\n      }\n    }\n    newsfor2021: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          date: { lt: \"2022-01-01\", gt: \"2021-01-01\" }\n          top: { eq: false }\n        }\n      }\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            image1 {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            title\n            intro\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            top\n          }\n        }\n      }\n    }\n    newsfor2020: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          date: { lt: \"2021-01-01\", gt: \"2020-01-01 \" }\n          top: { eq: false }\n        }\n      }\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            image1 {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            title\n            intro\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            top\n          }\n        }\n      }\n    }\n    newsfor2019: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          date: { lt: \"2020-01-01\", gt: \"2019-01-01 \" }\n          top: { eq: false }\n        }\n      }\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            image1 {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            title\n            intro\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            top\n          }\n        }\n      }\n    }\n    newsfor2018: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          date: { lt: \"2019-01-01\", gt: \"2018-01-01\" }\n          top: { eq: false }\n        }\n      }\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            image1 {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            title\n            intro\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            top\n          }\n        }\n      }\n    }\n    newsfor2017: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          date: { lt: \"2018-01-01\", gt: \"2017-01-01\" }\n          top: { eq: false }\n        }\n      }\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            image1 {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            title\n            intro\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            top\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\nimport { FaCalendarAlt } from \"react-icons/fa\"\nimport Img from \"gatsby-image\"\n\n\nclass StickyNews extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      stickyNews: this.props.stickyNews,\n    }\n  }\n\n  render() {\n    if (typeof this.state.stickyNews == \"undefined\") return <div>No data</div>\n\n    return (\n      this.state.stickyNews.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        const category = node.frontmatter.category\n\n        return (\n          <div key={node.fields.slug} >\n            <article\n              className=\"news-item content-article\"\n              key={node.fields.slug}\n            >\n              <section className=\"content-section\">\n                <header className=\"news-item-header sticky-news\">\n                  <Link className=\"news-front-image\" to={node.fields.slug}>\n                    <Img\n                      fluid={node.frontmatter.image1.childImageSharp.fluid}\n                      className={\"gallery-image\"}\n                    />\n                  </Link>\n                  <div className=\"news-front-content\">\n                    <small className=\"news-item-date\">\n                      <FaCalendarAlt />\n                      {\" Objavljeno: \"} {node.frontmatter.date}\n                      {\" v \"}\n                      {category}\n                    </small>\n                    <h5>\n                      <Link className=\"news-item-title\" to={node.fields.slug}>\n                        {title}\n                      </Link>\n                    </h5>\n                    <p className=\"news-item-intro\">\n                      {node.frontmatter.intro}\n                    </p>\n                    <hr />\n                    <Link className=\"news-item-link\" to={node.fields.slug}>\n                      {\"Preberi celotni prispevek >> \"}\n                    </Link>\n                  </div>\n                </header>\n              </section>\n            </article>\n          </div >\n        )\n      }\n      )\n    )\n  }\n}\n\nexport default StickyNews\n"],"sourceRoot":""}